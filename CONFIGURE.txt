(1) Install Maven 3.  This will generally set up a maven repository under
    the user's home directory:  ${HOME}/.m2/repository

(2) Install Eclipse 3.6.2 or higher.  This workspace WILL NOT work with 
    Eclipse 3.5.2 and earlier.

(3) Install Google Eclipse Plugin with App Engine SDK and Google Web Toolkit SDK.

(4) Optionally Install Tomcat 6.0.  
    This is required unless you do not import or always keep closed
    the MySQL and Postgres projects and don't use maven.

(5) Optionally: Install Postgres

For Postgres, run this script:

create database odk_test;
somehow: create user 'odk_test' with password 'odk_test'
somehow: grant all rights to this user on 'odk_test'
create schema odk_test; (in odk_test database)
create schema odk_unit; (in odk_test database)

(6) Optionally: Install MySQL

For MySQL, run this script:

UPDATE mysql.user SET Password=PASSWORD('odk_test') WHERE User='root';
FLUSH PRIVILEGES;
CREATE USER 'odk_test'@'localhost' IDENTIFIED BY 'odk_test';
CREATE DATABASE odk_test;
GRANT ALL PRIVILEGES ON odk_test.* TO 'odk_test'@'localhost' WITH GRANT OPTION;
CREATE DATABASE odk_unit;
GRANT ALL PRIVILEGES ON odk_unit.* TO 'odk_test'@'localhost' WITH GRANT OPTION;


For Maven (3) is optional; (4), (5) and (6) are required in order
to perform a full build.

----------

(7) Register libraries in Maven: (this is also required for Eclipse builds)

The libraries to be registered in maven are in the src/main/libs directory.
See the readme there for the maven commands to upload those files into your
local repository.  In some cases, these are cutting edge Google libraries that
may no longer need to be manually installed (once they get published to maven).

(8) Edit Maven's settings.xml file (this is in the .m2 directory).

A minimal file is:

<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <servers>
	<server>
		<id>local.gae</id>
		<username>mitchellsundt@gmail.com</username>
		<password></password>
	</server>
  </servers>
  <profiles>
  	<profile>
  	  <id>gae</id>
  	  <activation><activeByDefault/></activation>
  	  <properties>
	    <gae.home>\C:\\Program Files (x86)\\Google AE\\appengine-java-sdk-1.4.2</gae.home>
		<bitrock.home>C:\Program Files (x86)\BitRock InstallBuilder Professional 7.0.5</bitrock.home>
	  </properties>
  	</profile>
  </profiles>
  <activeProfiles><activeProfile>gae</activeProfile></activeProfiles>
</settings>

If bitrock is not installed, you must disable the installer modules in the pom.xml

----------

(9) Start Eclipse.

Windows / Preferences:

  Google / App Engine:
  
    Be sure there is an App Engine 1.4.2 or higher SDK defined.
	NOTE: 1.4.3 is broken. Don't use it.
	The default GWT version should match that in the maven 
	pom.xml (currently 1.4.2).

  Google / Web Toolkit:
  
    Be sure there is a WebToolkit SDK defined 2.2.0 or higher.
	The default GWT version should match that in the maven 
	pom.xml (currently 2.2.0).
	
  Java / Build Path / Classpath Variables:

	Define a new variable, M2_REPO, pointing to the .m2/repository
	directory, or wherever you have configured your local 
	Maven repository to be.

  Server / Runtime Environments:

      Add: Apache Tomcat 6.0 and point it to the install location 
      used in (3) earlier.  This is optional if you will not be 
	importing or using the MySQL and Postgres builds.

